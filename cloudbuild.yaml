steps:
  # Build the image
  - name: "gcr.io/cloud-builders/docker"
    entrypoint: "bash"
    args:
      [
        "-c",
        "docker pull ${_ARTIFACT_REGISTRY}/devfest-lecce-backend:latest || exit 0",
      ]

  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t",
        "${_ARTIFACT_REGISTRY}/devfest-lecce-backend:latest",
        "--cache-from",
        "${_ARTIFACT_REGISTRY}/devfest-lecce-backend:latest",
        ".",
      ]

  # Push the image to Artifact Registry
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "${_ARTIFACT_REGISTRY}/devfest-lecce-backend:latest"]

  # Update and execute the jobs to collect static and apply migrations
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      - "run"
      - "jobs"
      - "update"
      - "devfest-lecce-be-job"
      - "--image=${_ARTIFACT_REGISTRY}/devfest-lecce-backend:latest"
      - "--region=${_SERVICE_REGION}"

  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      - "run"
      - "jobs"
      - "execute"
      - "devfest-lecce-be-job"
      - "--update-env-vars=TASK=collectstatic"
      - "--region=${_SERVICE_REGION}"

  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      - "run"
      - "jobs"
      - "execute"
      - "devfest-lecce-be-job"
      - "--update-env-vars=TASK=migrate"
      - "--region=${_SERVICE_REGION}"

  # Deploy image to Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      - "run"
      - "services"
      - "update"
      - "devfest-lecce-be"
      - "--image=${_ARTIFACT_REGISTRY}/devfest-lecce-backend:latest"
      - "--region=${_SERVICE_REGION}"

images:
  - "${_ARTIFACT_REGISTRY}/devfest-lecce-backend:latest"

options:
  default_logs_bucket_behavior: CLOUD_LOGGING_ONLY
